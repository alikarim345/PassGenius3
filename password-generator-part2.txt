// PASSWORD GENERATOR - PART 2: COMPONENT START AND STATE

export default function PasswordGenerator() {
  const { toast } = useToast();
  const [password, setPassword] = useState("");
  const [bulkPasswords, setBulkPasswords] = useState<string[]>([]);
  const [showBulkResults, setShowBulkResults] = useState(false);
  const [bulkCount, setBulkCount] = useState("10");
  
  const [options, setOptions] = useState<PasswordOptions>({
    length: 16,
    includeUppercase: true,
    includeLowercase: true,
    includeNumbers: true,
    includeSymbols: true,
    excludeSimilar: false,
  });

  const getPasswordStrength = useCallback((password: string): PasswordStrength => {
    let score = 0;
    
    if (password.length >= 8) score += 1;
    if (password.length >= 12) score += 1;
    if (/[a-z]/.test(password)) score += 1;
    if (/[A-Z]/.test(password)) score += 1;
    if (/[0-9]/.test(password)) score += 1;
    if (/[^A-Za-z0-9]/.test(password)) score += 1;
    
    if (score <= 2) {
      return { score: 25, label: "Weak", color: "text-red-600", bgColor: "bg-red-500" };
    } else if (score <= 4) {
      return { score: 50, label: "Fair", color: "text-amber-600", bgColor: "bg-amber-500" };
    } else {
      return { score: 85, label: "Strong", color: "text-emerald-600", bgColor: "bg-emerald-500" };
    }
  }, []);