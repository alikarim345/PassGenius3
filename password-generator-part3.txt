// PASSWORD GENERATOR - PART 3: GENERATE PASSWORD FUNCTION

  const generatePassword = useCallback((opts: PasswordOptions): string => {
    let charset = "";
    
    if (opts.includeUppercase) charset += UPPERCASE;
    if (opts.includeLowercase) charset += LOWERCASE;
    if (opts.includeNumbers) charset += NUMBERS;
    if (opts.includeSymbols) charset += SYMBOLS;
    
    if (opts.excludeSimilar) {
      charset = charset.split('').filter(char => !SIMILAR_CHARS.includes(char)).join('');
    }
    
    if (!charset) {
      throw new Error("At least one character type must be selected");
    }
    
    // Use crypto.getRandomValues for secure random generation
    const array = new Uint8Array(opts.length);
    crypto.getRandomValues(array);
    
    let result = "";
    for (let i = 0; i < opts.length; i++) {
      result += charset[array[i] % charset.length];
    }
    
    return result;
  }, []);