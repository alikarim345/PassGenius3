// PASSWORD GENERATOR - PART 5: BULK PASSWORD HANDLERS

  const handleGenerateBulkPasswords = useCallback(() => {
    try {
      const count = parseInt(bulkCount);
      const passwords = Array.from({ length: count }, () => generatePassword(options));
      setBulkPasswords(passwords);
      setShowBulkResults(true);
      toast({
        title: "Bulk Generation Complete",
        description: `Generated ${count} secure passwords successfully.`,
      });
    } catch (error) {
      toast({
        title: "Generation Error",
        description: "Please select at least one character type.",
        variant: "destructive",
      });
    }
  }, [bulkCount, options, generatePassword, toast]);

  const handleCopyAllPasswords = useCallback(async () => {
    if (bulkPasswords.length === 0) return;
    
    // Use proper line breaks that work across platforms
    const allPasswords = bulkPasswords.join('\r\n');
    try {
      await navigator.clipboard.writeText(allPasswords);
      toast({
        title: "All Passwords Copied",
        description: `${bulkPasswords.length} passwords copied, each on a separate line.`,
      });
    } catch (error) {
      toast({
        title: "Copy Failed",
        description: "Failed to copy passwords. Please try again.",
        variant: "destructive",
      });
    }
  }, [bulkPasswords, toast]);

  const handleOptionChange = useCallback((key: keyof PasswordOptions, value: boolean | number) => {
    setOptions(prev => ({ ...prev, [key]: value }));
  }, []);

  // Generate initial password on component mount
  useEffect(() => {
    handleGeneratePassword();
  }, []);

  const strength = getPasswordStrength(password);